import pandas as pd
import numpy as np
import re

# Function to check if string is ASCII
def is_ascii(s):
    return all(ord(c) < 128 for c in s)

def is_subsequence(string, sub_string):
    sub_string = sub_string.replace('-', ' ')
    string = string.replace('-', ' ')
    sub_string_tokens = sub_string.lower().split()
    string_tokens = string.lower().split()
    return all(token in string_tokens for token in sub_string_tokens)

def are_all_chars_in_s1_in_s2(s1, s2):
    """
    Check if all characters of s1 appear in s2, regardless of order or positioning.
    """
    counter_s1 = {char: s1.count(char) for char in set(s1)}
    counter_s2 = {char: s2.count(char) for char in set(s2)}

    for char, count in counter_s1.items():
        if char not in counter_s2 or count > counter_s2[char]:
            return False
    return True


# Read CSV files
original_data = pd.read_csv(r'C:\Users\ycohe\Desktop\Work\Empire Media\event file\first_100.csv', header=None, encoding='latin-1')
additional_data = pd.read_csv(r'C:\Users\ycohe\Desktop\Work\Empire Media\event file\to_add.csv', header=None, encoding='latin-1')

# Filter out non-ASCII strings
ascii_filtered_original_data = original_data[original_data[0].apply(is_ascii)]
ascii_filtered_additional_data = additional_data[additional_data[0].apply(is_ascii)]

# Add a new column for the largest subsequence in the original data
ascii_filtered_original_data['largest_subsequence'] = np.nan

# For each row in original_data
for orig_index, orig_row in ascii_filtered_original_data.iterrows():
    matching_string = ''

    # For each row in additional_data
    for add_index, add_row in ascii_filtered_additional_data.iterrows():
        if are_all_chars_in_s1_in_s2(str(orig_row[0]).lower(), str(add_row[0]).lower()):
            matching_string = add_row[0]

        # Set the matching string found in the new column
        if matching_string:
            print(f"Updating row {orig_index} with matching string: {matching_string}")
            ascii_filtered_original_data.at[orig_index, 'matching_string'] = matching_string

# Export the resulting DataFrame to CSV
ascii_filtered_original_data.to_csv(
    r'C:\Users\ycohe\Desktop\Work\Empire Media\event file\merge_chat_output_final.csv', index=False, header=False)




